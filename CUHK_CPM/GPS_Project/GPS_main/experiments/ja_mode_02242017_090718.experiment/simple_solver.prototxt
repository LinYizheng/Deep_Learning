test_iter: 1
test_iter: 1
test_interval: 1000000
base_lr: 0.001
display: 0
lr_policy: "fixed"
momentum: 0.9
weight_decay: 0.005
snapshot_prefix: "/home/turinglife/GPS_Project/GPS_main/python/../experiments/ja_mode_02242017_090718.experiment/policy"
random_seed: 1
train_net_param {
  layer {
    name: "Python1"
    type: "Python"
    top: "Python1"
    top: "Python2"
    top: "Python3"
    python_param {
      module: "policy_layers"
      layer: "PolicyDataLayer"
      param_str: "{\"shape\": [{\"dim\": [100, 8]}, {\"dim\": [100, 4]}, {\"dim\": [100, 4, 4]}]}"
    }
  }
  layer {
    name: "InnerProduct1"
    type: "InnerProduct"
    bottom: "Python1"
    top: "InnerProduct1"
    inner_product_param {
      num_output: 40
      weight_filler {
        type: "gaussian"
        std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
  }
  layer {
    name: "ReLU1"
    type: "ReLU"
    bottom: "InnerProduct1"
    top: "InnerProduct1"
  }
  layer {
    name: "InnerProduct2"
    type: "InnerProduct"
    bottom: "InnerProduct1"
    top: "InnerProduct2"
    inner_product_param {
      num_output: 40
      weight_filler {
        type: "gaussian"
        std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
  }
  layer {
    name: "ReLU2"
    type: "ReLU"
    bottom: "InnerProduct2"
    top: "InnerProduct2"
  }
  layer {
    name: "InnerProduct3"
    type: "InnerProduct"
    bottom: "InnerProduct2"
    top: "InnerProduct3"
    inner_product_param {
      num_output: 4
      weight_filler {
        type: "gaussian"
        std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
  }
  layer {
    name: "Python4"
    type: "Python"
    bottom: "InnerProduct3"
    bottom: "Python2"
    bottom: "Python3"
    top: "Python4"
    loss_weight: 1.0
    python_param {
      module: "policy_layers"
      layer: "WeightedEuclideanLoss"
    }
  }
}
test_net_param {
  layer {
    name: "Python1"
    type: "Python"
    top: "Python1"
    python_param {
      module: "policy_layers"
      layer: "PolicyDataLayer"
      param_str: "{\"shape\": [{\"dim\": [1, 8]}]}"
    }
  }
  layer {
    name: "InnerProduct1"
    type: "InnerProduct"
    bottom: "Python1"
    top: "InnerProduct1"
    inner_product_param {
      num_output: 40
      weight_filler {
        type: "gaussian"
        std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
  }
  layer {
    name: "ReLU1"
    type: "ReLU"
    bottom: "InnerProduct1"
    top: "InnerProduct1"
  }
  layer {
    name: "InnerProduct2"
    type: "InnerProduct"
    bottom: "InnerProduct1"
    top: "InnerProduct2"
    inner_product_param {
      num_output: 40
      weight_filler {
        type: "gaussian"
        std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
  }
  layer {
    name: "ReLU2"
    type: "ReLU"
    bottom: "InnerProduct2"
    top: "InnerProduct2"
  }
  layer {
    name: "InnerProduct3"
    type: "InnerProduct"
    bottom: "InnerProduct2"
    top: "InnerProduct3"
    inner_product_param {
      num_output: 4
      weight_filler {
        type: "gaussian"
        std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
  }
}
test_net_param {
  layer {
    name: "DummyData1"
    type: "DummyData"
    top: "DummyData1"
    dummy_data_param {
      shape {
        dim: 1
        dim: 8
      }
    }
  }
  layer {
    name: "InnerProduct1"
    type: "InnerProduct"
    bottom: "DummyData1"
    top: "InnerProduct1"
    inner_product_param {
      num_output: 40
      weight_filler {
        type: "gaussian"
        std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
  }
  layer {
    name: "ReLU1"
    type: "ReLU"
    bottom: "InnerProduct1"
    top: "InnerProduct1"
  }
  layer {
    name: "InnerProduct2"
    type: "InnerProduct"
    bottom: "InnerProduct1"
    top: "InnerProduct2"
    inner_product_param {
      num_output: 40
      weight_filler {
        type: "gaussian"
        std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
  }
  layer {
    name: "ReLU2"
    type: "ReLU"
    bottom: "InnerProduct2"
    top: "InnerProduct2"
  }
  layer {
    name: "InnerProduct3"
    type: "InnerProduct"
    bottom: "InnerProduct2"
    top: "InnerProduct3"
    inner_product_param {
      num_output: 4
      weight_filler {
        type: "gaussian"
        std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
  }
}
type: "Adam"
